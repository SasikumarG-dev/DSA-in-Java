Two Linked Lists are identical when they have the same data and the arrangement of data is also the same. 
Write a function to check if the given two linked lists are identical. 

Examples:

Input: a = 1->2->3->4, b = 1->2->3->4
Output: Identical

Input: a = 1->3->5->2, b = 1->3->4->6
Output: Not Identical



SOLUTION IN JAVA:


package singlyLinkedList;

public class IdenticalList {
	
	Node head1,head2;
	class Node{
		int val;
		Node next;
		
		public Node(int val) {
			this.val=val;
		}
		
		public Node(int val,Node next) {
			this.val=val;
			this.next=next;
		}
	}
	public Node insert(int val,Node head) {
		Node node=new Node(val);
		if(head==null) {
			head=node;
			head.next=null;
		}
		Node temp=head;
		while(temp.next!=null) {
			temp=temp.next;
		}
		temp.next=node;
		node.next=null;
		
		return head;
		
	}
	
	public void insertList1(int val) {
		head1=insert(val,head1);
	}
	
	public void insertList2(int val) {
		head2=insert(val,head2);
	}
	
	public void print(Node head) {
		Node node=head;
		if(node==null) {
			return;
		}
		while(node!=null) {
			System.out.print(node.val+"->");
			node=node.next;
		}
		System.out.println("end");
	}
	
	public void printList1() {
		print(head1);
	}
	
	public void printList2() {
		print(head2);
	}
	
	public int size(Node head) {
		int size=0;
		while(head!=null) {
			size++;
			head=head.next;
		}
		return size;
	}
	public boolean isIdenetical() {
		if(size(head1)!=size(head2)) {
			return false;
		}
		while(head1!=null && head2!=null) {
			if(head1.val!=head2.val) {
				return false;
			}
			head1=head1.next;
			head2=head2.next;
		}
		return true;
	}

}


public class Main {

	public static void main(String[] args) {

		IdenticalList list=new IdenticalList();
		list.insertList1(1);
		list.insertList1(2);
		list.insertList1(3);
		list.insertList1(4);
		
		list.insertList2(1);
		list.insertList2(2);
		list.insertList2(3);
		list.insertList2(4);
		
		if(list.isIdenetical()) {
			System.out.println("Identical");
		}
		else {
			System.out.println("Not Identical");
		}
		
	}

}

